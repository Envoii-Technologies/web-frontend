version: '3.9'

volumes:
  keycloak_data:
    driver: local
  db_data:
    driver: local
  cache_data:
    driver: local

networks:
  local-envoii:
    driver: bridge

services:
  redis_gateway:
    image: redis
    container_name: redis_gateway
    command: --port 6381
    ports:
      - "6381:6381"
    networks:
      local-envoii:
        aliases:
          - redis
                
  gateway:
    build: ./gateway
    container_name: gateway
    ports:
      - "8080:8080"
      - "80:80"
      - "8443:8443"
      - "9876:9876"
    volumes:
      - ./gateway/config/system.config.yml:/usr/src/app/config/system.config.yml
      - ./gateway/config/gateway.config.yml:/usr/src/app/config/gateway.config.yml
    environment:
      REDIS_PASSWORD: eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    restart: always
    networks:
      - local-envoii

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    networks:
      - local-envoii

  # keycloak
  keycloak:
    depends_on:
      - postgres
    container_name: keycloak
    environment:
      DB_VENDOR: postgres
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: keycloak
      KEYCLOAK_ADMIN: admin 
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HTTP_RELATIVE_PATH: /auth
      # KC_HOSTNAME: keycloak.company.com
    image: quay.io/keycloak/keycloak:latest
    command:
      - start-dev
    ports:
      - "28080:8080"
    restart: unless-stopped
    networks:
      - local-envoii

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - local-envoii

  # database check
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
    networks:
      - local-envoii

  migration:
    image: ghcr.io/envoii-technologies/migration:latest-develop
    container_name: migration
    depends_on:
      - postgres
      - keycloak
    restart: on-failure
    environment:
      - POSTGRESQL_USER=${POSTGRESQL_USER}
      - POSTGRESQL_PASS=${POSTGRESQL_PASS}
      - POSTGRESQL_DB=${POSTGRESQL_DB}
      - KEYCLOAK_URL=${KEYCLOAK_URL}
      - MONGO_URL=${MONGO_URI}
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASS=${MONGO_PASSWORD}
    networks:
      - local-envoii

  # web frontend
  web:
    container_name: frontend
    stdin_open: true
    build:
      context: .
      dockerfile: Dockerfile.develop 
      args:
        GITHUB_TOKEN: ${GITHUB_TOKEN}
    ports:
      - "5500:5500"
    volumes:
      - "/app/node_modules"
      - "./:/app"
    networks:
      - local-envoii

  # tenant-service
  tenant:
    container_name: tenant
    image: ghcr.io/envoii-technologies/tenant-service:latest-develop
    ports: 
      - "4000:4000"
    volumes:
      - "/app/node_modules"
      - "./:/app"
    environment:
      SERVICE_NAME: user
      SERVICE_PORT: 4000
      KEYCLOAK_URL: ${KEYCLOAK_URL}
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_URI: ${MONGO_URI}
      MONGO_DB_NAME: local-develop_db
    networks:
      - local-envoii

  # user-service
  user:
    container_name: user
    image: ghcr.io/envoii-technologies/user-service:latest-develop
    ports:
      - "4100:4100"
    volumes:
      - "/app/node_modules"
      - "./:/app"
    environment:
      SERVICE_NAME: user
      SERVICE_PORT: 4100
      KEYCLOAK_URL: ${KEYCLOAK_URL}
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_URI: ${MONGO_URI}
      MONGO_DB_NAME: local-develop_db
    networks:
      - local-envoii

  # card-service
  card:
    container_name: card
    image: ghcr.io/envoii-technologies/card-service:latest-develop
    ports:
      - "4200:4200"
    volumes:
      - "/app/node_modules"
      - "./:/app"
    environment:
      SERVICE_NAME: card
      SERVICE_PORT: 4200
      KEYCLOAK_URL: ${KEYCLOAK_URL}
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_URI: ${MONGO_URI}
      MONGO_DB_NAME: local-develop_db
    networks:
      - local-envoii
